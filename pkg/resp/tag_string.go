// Code generated by "stringer -type=Tag -linecomment"; DO NOT EDIT.

package resp

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SimpleStringTag-43]
	_ = x[SimpleErrorTag-45]
	_ = x[IntegerTag-58]
	_ = x[BulkStringTag-36]
	_ = x[ArrayTag-42]
	_ = x[NullTag-95]
	_ = x[BooleanTag-35]
	_ = x[DoubleTag-44]
	_ = x[BigNumberTag-40]
	_ = x[BulkErrorTag-33]
	_ = x[VerbatimStringTag-61]
	_ = x[MapTag-37]
	_ = x[AttributeTag-124]
	_ = x[SetTag-126]
	_ = x[PushTag-62]
}

const (
	_Tag_name_0 = "bulk error"
	_Tag_name_1 = "booleanbulk stringmap"
	_Tag_name_2 = "big number"
	_Tag_name_3 = "arraysimple stringdoublesimple error"
	_Tag_name_4 = "integer"
	_Tag_name_5 = "verbose stringpush"
	_Tag_name_6 = "null"
	_Tag_name_7 = "attribute"
	_Tag_name_8 = "data"
)

var (
	_Tag_index_1 = [...]uint8{0, 7, 18, 21}
	_Tag_index_3 = [...]uint8{0, 5, 18, 24, 36}
	_Tag_index_5 = [...]uint8{0, 14, 18}
)

func (i Tag) String() string {
	switch {
	case i == 33:
		return _Tag_name_0
	case 35 <= i && i <= 37:
		i -= 35
		return _Tag_name_1[_Tag_index_1[i]:_Tag_index_1[i+1]]
	case i == 40:
		return _Tag_name_2
	case 42 <= i && i <= 45:
		i -= 42
		return _Tag_name_3[_Tag_index_3[i]:_Tag_index_3[i+1]]
	case i == 58:
		return _Tag_name_4
	case 61 <= i && i <= 62:
		i -= 61
		return _Tag_name_5[_Tag_index_5[i]:_Tag_index_5[i+1]]
	case i == 95:
		return _Tag_name_6
	case i == 124:
		return _Tag_name_7
	case i == 126:
		return _Tag_name_8
	default:
		return "Tag(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
